<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket
		http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- (성빈) 외부경로 resources mapping-->
	<!-- (성빈) 외부경로 '/' 입력 시 dispatcherServlet의 해당 url에 대한 requestMapping을 막고-->
	<!-- (성빈) /upload/ 입력 시 해당 location에서 찾을 수 있도록 설정-->
	<!-- (성빈) 전부 C 밑에 upload라는 폴더가 있을꺼임. 없으면 하나 만들어 두삼.-->
	<!-- (성빈) 이미지 파일은 이 위치에 저장되고 이 위치로부터 파일을 불러옵니다.-->
	<resources mapping="madi/upload/**" location="file:///c:/upload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- WebSocket에 사용할 핸들러 객체 생성 -->
	<beans:bean id="socketHandler" class="com.spring.madi.SocketHandler"/>
	
	<!-- WebSocket에 사용할 핸들러 객체 맵핑 -->
	<websocket:handlers>
		<websocket:mapping path="/broadcasting" handler="socketHandler"/>
			<!-- <websocket:handshake-interceptors>
				<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>
			</websocket:handshake-interceptors> -->
	</websocket:handlers>
	
	<!-- WebSocket EchoHandler Bena Register -->
	<beans:bean id="echoHandler" class="com.spring.madi.EchoHandler"></beans:bean>
	<!-- EchoHandler & EndPoirnt Mapping -->
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/chatting"/>
	</websocket:handlers>
	
	
	<!-- 멀티파트 관련 빈 설정 -->
	<!-- Multipart 지원 기능을 사용하려면 먼저 MultipartResolver를 스프링 설정 파일에 등록 -->
	<!-- DispatcherServlet은 이름이 "multipartResolver"인 빈을 사용하기 때문에 다른 이름(id)을 지정할 경우 MultipartResolver로 사용되지 않음 -->
	<beans:bean id = "multipartResolver" class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean>
	
	<context:component-scan base-package="com.spring.madi" />

</beans:beans>